{"version":3,"sources":["Assets/components/tile/tile.tsx","Assets/components/chessboard/chessboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tile","number","image","className","src","file","row","ChessBoard","board","j","length","i","push","undefined","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAOe,SAASA,EAAT,GAAsC,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,MAClC,OAAGD,EAAS,IAAM,EAEV,qBAAKE,UAAU,iBAAf,SACI,qBAAKC,IAAKF,MAKd,qBAAKC,UAAU,kBAAf,SACI,qBAAKC,IAAKF,MCb1B,IAAMG,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BC,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAcpB,SAASC,IAGpB,IAFA,IAAIC,EAAQ,GAEJC,EAAIJ,EAAKK,OAAO,EAAGD,GAAK,EAAGA,IAC/B,IAAI,IAAIE,EAAI,EAAGA,EAAIL,EAAII,OAAQC,IAAI,CAC/B,IACMV,EAASU,EAAIF,EAEnBD,EAAMI,KAAK,cAACZ,EAAD,CAAMC,OAAQA,EAAQC,MAHrBW,aAQpB,OAAO,qBAAKC,GAAG,aAAR,SAAsBN,ICrBlBO,MARf,WACE,OACI,qBAAKD,GAAG,MAAR,SACI,cAACP,EAAD,OCQKS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cabf1697.chunk.js","sourcesContent":["import \"./tile.css\"\r\n\r\ninterface Props{\r\n    image?: string\r\n    number: number\r\n}\r\n\r\nexport default function Tile({number, image}: Props){\r\n    if(number % 2 === 0){\r\n        return (\r\n            <div className=\"tile dark-tile\">\r\n                <img src={image}/>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"tile light-tile\">\r\n                <img src={image}/>\r\n            </div>\r\n        );\r\n    }\r\n}","\nimport \"./chessboard.css\";\nimport Tile from \"../tile/tile\";\n\nconst file = [1, 2, 3, 4, 5, 6, 7, 8];\nconst row =  [1, 2, 3, 4, 5, 6, 7, 8];\nconst types = [\"k\", \"q\", \"r\", \"n\", \"b\", \"p\"];\n\ninterface piece{\n    type: string\n    color: string\n    x: number\n    y: number\n    image: string\n}\n\nconst pieces: piece[] = [];\n\n\nexport default function ChessBoard (){\n    let board = [];\n\n    for(let j = file.length-1; j >= 0; j--){\n        for(let i = 0; i < row.length; i++){\n            let image = undefined;\n            const number = i + j;\n\n            board.push(<Tile number={number} image={image} />);\n        }\n    }\n\n\n    return <div id=\"chessboard\">{board}</div>\n}","import './App.css';\nimport ChessBoard from \"./Assets/components/chessboard/chessboard\";\n\nfunction App() {\n  return (\n      <div id=\"app\">\n          <ChessBoard/>\n      </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}