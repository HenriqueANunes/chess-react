{"version":3,"sources":["Assets/components/tile/tile.tsx","Assets/components/chessboard/chessboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tile","number","row","image","col","className","ChessBoard","board","j","length","i","push","undefined","String","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQASe,SAASA,EAAT,GAAgD,IAAjCC,EAAgC,EAAhCA,OAAeC,GAAiB,EAAxBC,MAAwB,EAAjBD,KAAKE,EAAY,EAAZA,IAC9C,OAAGH,EAAS,IAAM,EAEV,sBAAKI,UAAU,YAAf,UAEI,qBAAKA,UAAU,MAAf,SAAsBH,IACtB,qBAAKG,UAAU,MAAf,SAAsBD,OAK1B,sBAAKC,UAAU,aAAf,UAEI,qBAAKA,UAAU,MAAf,SAAsBH,IACtB,qBAAKG,UAAU,MAAf,SAAsBD,OCnBtC,IAAMA,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1CF,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAIpB,SAASI,IAGpB,IAFA,IAAIC,EAAQ,GAEJC,EAAIJ,EAAIK,OAAO,EAAGD,GAAK,EAAGA,IAC9B,IAAI,IAAIE,EAAI,EAAGA,EAAIR,EAAIO,OAAQC,IAAI,CAC/B,IACMT,EAASS,EAAIF,EAEnBD,EAAMI,KAAK,cAACX,EAAD,CAAMC,OAAQA,EAAQE,MAHrBS,UAGmCV,IAAW,IAANQ,EAAUG,OAAOL,EAAE,GAAK,GAAIJ,IAAW,IAANI,EAAUJ,EAAIM,GAAK,MAKhH,OAAO,qBAAKI,GAAG,aAAR,SAAsBP,ICXlBQ,MARf,WACE,OACI,qBAAKD,GAAG,MAAR,SACI,cAACR,EAAD,OCQKU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17353379.chunk.js","sourcesContent":["import \"./tile.css\"\r\n\r\ninterface Props{\r\n    image?: string\r\n    number: number\r\n    row: string\r\n    col: string\r\n}\r\n\r\nexport default function Tile({number, image, row, col}: Props){\r\n    if(number % 2 === 0){\r\n        return (\r\n            <div className=\"dark-tile\">\r\n                {/*<img src={image}/>*/}\r\n                <div className=\"row\">{row}</div>\r\n                <div className=\"col\">{col}</div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"light-tile\">\r\n                {/*<img src={image}/>*/}\r\n                <div className=\"row\">{row}</div>\r\n                <div className=\"col\">{col}</div>\r\n            </div>\r\n        );\r\n    }\r\n}","\nimport \"./chessboard.css\";\nimport Tile from \"../tile/tile\";\n\nconst col = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst row =  [1, 2, 3, 4, 5, 6, 7, 8];\n\n\n\nexport default function ChessBoard (){\n    let board = [];\n\n    for(let j = col.length-1; j >= 0; j--){\n        for(let i = 0; i < row.length; i++){\n            let image = undefined;\n            const number = i + j;\n\n            board.push(<Tile number={number} image={image} row={i === 0 ? String(j+1) : \"\"} col={j === 0 ? col[i] : \"\"}/>);\n        }\n    }\n\n\n    return <div id=\"chessboard\">{board}</div>\n}","import './App.css';\nimport ChessBoard from \"./Assets/components/chessboard/chessboard\";\n\nfunction App() {\n  return (\n      <div id=\"app\">\n          <ChessBoard/>\n      </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}