{"version":3,"sources":["Assets/components/pieces/pieces.tsx","Assets/components/tile/tile.tsx","Assets/components/chessboard/chessboard.tsx","Assets/components/fen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Type","Team","Tile","number","image","row","col","className","src","ChessBoard","board","pieces","fen","pieceTypeFromSymbol","KING","QUEEN","ROOK","BISHOP","KNIGHT","PAWN","fenBoard","split","char","isNaN","parseInt","pieceTeam","toUpperCase","WHITE","BLACK","pieceType","push","position","team","type","Fen","i","length","j","undefined","p","String","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e34676e4.chunk.js","sourcesContent":["/*\r\nexport interface Piece{\r\n    nome: string;\r\n    x: number;\r\n    y: number;\r\n    image: string;\r\n\r\n    setX(x:number): void;\r\n    setY(y:number): void;\r\n\r\n    getX(): number;\r\n    getY(): number;\r\n\r\n}*/\r\n\r\nexport interface Position{\r\n    row: number;\r\n    col: number;\r\n}\r\n\r\nexport enum Type{\r\n    KING,\r\n    QUEEN,\r\n    ROOK,\r\n    BISHOP,\r\n    KNIGHT,\r\n    PAWN,\r\n}\r\n\r\nexport enum Team{\r\n    WHITE,\r\n    BLACK,\r\n}\r\n\r\nexport interface Pieces{\r\n    image: string;\r\n    position: Position;\r\n    type: Type;\r\n    team: Team;\r\n}\r\n","import \"./tile.css\"\r\n\r\ninterface Props{\r\n    image?: string\r\n    number: number\r\n    row: string\r\n    col: string\r\n}\r\n\r\nexport default function Tile({number, image, row, col}: Props){\r\n    if(number % 2 === 0){\r\n        return (\r\n            <div className=\"tile dark-tile\">\r\n                <div className=\"row light\">{row}</div>\r\n                <div className=\"img\"><img src={image}/></div>\r\n                <div className=\"col light\">{col}</div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"tile light-tile\">\r\n                <div className=\"row dark\">{row}</div>\r\n                <div className=\"img\"><img src={image}/></div>\r\n                <div className=\"col dark\">{col}</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import \"./chessboard.css\";\nimport Tile from \"../tile/tile\";\nimport {Fen} from \"../fen\";\n\nconst col = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst row =  [1, 2, 3, 4, 5, 6, 7, 8];\n\n\nexport default function ChessBoard (){\n    let board = [];\n    const pieces = Fen(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\")\n\n    for(let i = col.length-1; i >= 0; i--){\n        for(let j = 0; j < row.length; j++){\n            let image = undefined;\n            const number = i + j;\n\n            for(let p of pieces){\n                if(i === p.position.row && j === p.position.col){\n                    image = p.image;\n                }\n            }\n\n            board.push(<Tile number={number} image={image} row={j === 0 ? String(row[i]+1) : \"\"} col={i === 0 ? col[j] : \"\"}/>);\n        }\n    }\n\n\n    return <div id=\"chessboard\">{board}</div>\n}","import {Pieces, Team, Type} from \"./pieces/pieces\";\r\n\r\nexport function Fen(fen:string){\r\n    const pieceTypeFromSymbol = {\r\n        'k': Type.KING,\r\n        'q': Type.QUEEN,\r\n        'r': Type.ROOK,\r\n        'b': Type.BISHOP,\r\n        'K': Type.KNIGHT,\r\n        'p': Type.PAWN,\r\n    };\r\n\r\n    const pieces: Pieces[] = [];\r\n    const fenBoard: string = fen.split(' ')[0];\r\n    let col = 0 ,row = 7;\r\n\r\n    for(let char of fenBoard){\r\n        if(char === '/'){\r\n            col = 0;\r\n            row--;\r\n        }else{\r\n            if(!isNaN(parseInt(char))){\r\n                col += parseInt(char);\r\n            }else{\r\n                let pieceTeam = char === char.toUpperCase() ? Team.WHITE : Team.BLACK;\r\n                let pieceType = pieceTypeFromSymbol['p'];\r\n                char = char.toUpperCase();\r\n                pieces.push({\r\n                    image: \"src/Assets/images/\" + (pieceTeam === 0 ? \"b\"+char : \"w\"+char) + \".png\",\r\n                    position:{row:row,col:col},\r\n                    team:pieceTeam,\r\n                    type:pieceType\r\n                });\r\n                col++;\r\n            }\r\n        }\r\n    }\r\n\r\n    return pieces;\r\n\r\n}","import './App.css';\nimport ChessBoard from \"./Assets/components/chessboard/chessboard\";\n\nfunction App() {\n  return (\n      <div id=\"app\">\n          <ChessBoard/>\n      </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}